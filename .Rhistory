dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter_all(any_vars(!is.na(.))) %>%
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE)))
workbook<- "D:/R/CSTOCK1/data/CSTOCK.xlsx"
cstock<-read.xlsx(workbook, 1, colClasses="character")
#colClasses all characters to retrieve correct data without losing and replacing by NAs.
#names(cstock)
#cstock<-read.xlsx(workbook, 1,colClasses=c("integer","integer", "integer","numeric", "integer", "numeric"))
#str(cstock)
##transform data from 'chr' to proper format: 'num', 'int'
#cstock$ID<-as.vector(cstock$ID)# as 'ID' has a 'Y-1' format reformatting it to a factor returns NA, leave as is
cstock$pl<-as.factor(cstock$pl)
cstock$type<-as.factor(cstock$type)
cstock$mxdpt<-as.numeric(cstock$mxdpt)
#cstock$lyr<-as.integer(cstock$lyr)
cstock$lthkn<-as.numeric(cstock$lthkn)
cstock$lstock<-as.numeric(cstock$lstock)
cstock$e<-as.numeric(cstock$e)
cstock$n<-as.numeric(cstock$n)
cstock$TPG<-as.factor(cstock$TPG)
cstock$sl<-as.numeric(cstock$sl)
cstock$lbd<-as.numeric(cstock$lbd)
cstock$pl<-factor(cstock$pl, levels = c("D1", "D2", "D3", "D4", "D5", "D6", "D8", "D9", "D10", "D11", "D12", "D13", "D14", "D15", "D16", "D17", "D18", "D19", "D20", "D21", "D22", "D23", "D24", "D25", "D26", "D27", "D28", "D29", "D30", "D31", "D32", "D33", "D34", "D35", "D36", "D37", "D38", "D39", "D40", "D41", "D42", "D43"))
cstock<-cstock%>%
mutate(slyr = case_when(
lbd <= 5 & type == 'soil' ~ "top",
lbd <= 10 ~ "org10",
lbd > 10 & lbd <= 23 ~"min20",
lbd > 23 ~ "min30",
TRUE ~ "lit" # in all other cases = "other"
), .after = lyr)  # mutate a new column after column $lyr
cstock$slyr<-as.factor(cstock$slyr)
cstock<-cstock%>%
mutate(slyr = case_when(
lbd <= 5 & type == 'soil' ~ "top",
lbd <= 10 & type == 'soil' ~ "org10",
lbd > 10 & lbd <= 23 & type == 'soil' ~"min20",
lbd > 23 & type == 'soil' ~ "min30",
TRUE ~ "lit" # in all other cases = "other"
), .after = lyr)  # mutate a new column after column $lyr
cstock$slyr<-as.factor(cstock$slyr)
cstock=cstock %>%
filter_all(any_vars(!is.na(.))) %>% #remove ROWS where ALL NAs
pivot_wider(
names_from = type, #names of new columns from factor 'type'
values_from = lbd, # values of new columns are from numeric variable "mxdpt"
names_glue = "{type}_dpt")# modification of names by adding information on the
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter_all(any_vars(!is.na(.))) %>%
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE)))
#names_glue = "{slyr}_{}")
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs)
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter_all(any_vars(!is.na(.))) %>%
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE) - soil_dpt))
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter_all(any_vars(!is.na(.))) %>%
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE), - soil_dpt))
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter_all(any_vars(!is.na(.))) %>%
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE)), - soil_dpt)
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
soil_mdp=max(soil_dpt),
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter_all(any_vars(!is.na(.))) %>%
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE)),-soil_dpt)
#names_glue = "{slyr}_{}")
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
soil_mdp=max(soil_dpt),
.after = cs)
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
soil_mdp==max(soil_dpt),
.after = cs)
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(soil_mdp=max(soil_dpt))
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(soil_mdp=mean(soil_dpt))
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(soil_mdp = mean (soil_dpt))
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(soil_mdp = max (soil_dpt, na.rm = T))
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(soil_mdp = max (soil_dpt, na.rm = T))%>%
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter_all(any_vars(!is.na(.))) %>%
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE)),-soil_dpt)
#names_glue = "{slyr}_{}")
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(soil_mdp = max (soil_dpt, na.rm = T))%>%
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter_all(any_vars(!is.na(.))) %>%
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE)))
#names_glue = "{slyr}_{}")
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(soil_mdp = max (soil_dpt, na.rm = T))%>%
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter_all(any_vars(!is.na(.))) %>%
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE)),-mxdpt)
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(soil_mdp = max (soil_dpt, na.rm = T))%>%
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter_all(any_vars(!is.na(.))) %>%
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE)),-c(mxdpt, soil_dpt))
summary(gl8)
cssum=
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(soil_mdp = max (soil_dpt, na.rm = T))%>%
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter(!is.na(pl)) %>% #  удаляем строку пустых значений по признаку названия площадки pl=NA
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE)),-c(mxdpt, soil_dpt)) %>%
mutate(WD=wd1+wd2+wd3) %>%
relocate(WD, .after = wd3)# создаём новую колонку с суммой 3 значений
library(xlsx)
library(readxl)
library(psych)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(dplyr, warn=FALSE)
library(tidyr)
library(data.table)
library(broom)
cstock %>%
dplyr::select(pl, slyr, lthkn, bulk, c, lstock, cstock, lcs_cm) %>% #оставили тольео некоторые колонки
group_by(pl) %>%
summarise_if(is.numeric, list( #саммари только по числовым переменным
stat = ~if (length(unique(.)) == 1) NA else shapiro.test(.)$statistic,# первая переменная сама статистика Шапиро
p.value = ~if (length(unique(.)) == 1) NA else shapiro.test(.)$p.value
))
cssum=
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(soil_mdp = max (soil_dpt, na.rm = T))%>%
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter(!is.na(pl)) %>% #  удаляем строку пустых значений по признаку названия площадки pl=NA
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE)),-c(mxdpt, soil_dpt)) %>%
mutate(WD=wd1+wd2+wd3) %>%
relocate(WD, .after = wd3)# создаём новую колонку с суммой 3 значений
# помещаем новую колонку после 'wd3'
csmlr=cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(soil_mdp = max (soil_dpt, na.rm = T))%>%
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
filter(!is.na(pl)) %>% #  удаляем строку пустых значений по признаку названия площадки pl=NA
select(where( ~!all(is.na(.x))))%>%
#summarise_each(funs(mean(., na.rm = TRUE)),-c(mxdpt, soil_dpt)) %>%
mutate(WD=wd1+wd2+wd3) %>%
relocate(WD, .after = wd3)# создаём новую колонку с суммой 3 значений
# помещаем новую колонку после 'wd3'
cstock %>%
select( , -NA_dpt)%>%           #remove column
filter(!is.na(pl)) %>%          #romove empty row
#TPG=factor(TPG, levels=c('FtR', 'HI', 'SI', 'SV', 'VF')) %>%
ggplot(aes(x = TPG, y = pl, color= TPG, show.legend=F)) +
geom_point(size=2, show.legend = FALSE, position = "identity")+
geom_text(aes(label = pl), size=5, hjust = 1.2, vjust = 0.5, show.legend=F)+
scale_x_discrete(limits=c('HI', 'SI', 'SV', 'VF'))+
coord_fixed(ratio = 0.2/2)+
theme_bw()+
theme(axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
labs(
x= "Элемент рельефа",
y= "Пробная площадь")
library(mice)
library(psych)
narm1=complete(mice(cssum, m=5))#
narm %>%
select(-c(branch, bark, stem, leaves, wd1, wd2, wd3, c_min20, cs_med, c_org10, lcs_cm_min30, lcs_cm_top, lcs_cm_min20, lcs_cm_org10, totcs_mdn, cs_org10, biottl)) %>%# exclude several variables
#scale() %>%
PCA(scale=T) %>%
summary()
library(FactoMineR)
narm %>%
select(-c(branch, bark, stem, leaves, wd1, wd2, wd3, c_min20, cs_med, c_org10, lcs_cm_min30, lcs_cm_top, lcs_cm_min20, lcs_cm_org10, totcs_mdn, cs_org10, biottl)) %>%# exclude several variables
#scale() %>%
PCA(scale=T) %>%
summary()
narm %>%
dplyr::select(-c(branch, bark, stem, leaves, wd1, wd2, wd3, c_min20, cs_med, c_org10, lcs_cm_min30, lcs_cm_top, lcs_cm_min20, lcs_cm_org10, totcs_mdn, cs_org10, biottl)) %>%# exclude several variables
#scale() %>%
PCA(scale=T) %>%
summary()
narm %>%
dplyr::select(-c(branch, bark, stem, leaves, wd1, wd2, wd3, cs_med, c_org10, lcs_cm_min30, lcs_cm_top, lcs_cm_min20, lcs_cm_org10, totcs_mdn, cs_org10, biottl)) %>%# exclude several variables
#scale() %>%
PCA(scale=T) %>%
summary()
cssum=
cstock %>%
group_by(pl, slyr) %>%
dplyr::summarise(across(where(is.numeric) & !cstock, mean),# саммари по всем числовым столбцам кроме столбца с запасами С, он нужен далее
cs=mean(cstock),# создаём столбец средних значений запасов по слоям
cs_med=median(cstock))%>%# создаём столбец мединан запасов по слоям
dplyr::mutate(soil_mdp = max (soil_dpt, na.rm = T))%>%
dplyr::mutate(totcs_mn=sum(cs[slyr!='lit']),# сумма средних без подстилки!!!! на ПП
totcs_mdn=sum(cs_med[slyr!='lit']),# сумма медиан без подстилки!!!! на ПП
.after = cs) %>% #положение новых колонок в массиве
pivot_wider(
names_from = slyr, #explained in prev. chunk
values_from = c(cs, c, lcs_cm))%>%
filter(!is.na(pl)) %>% #  удаляем строку пустых значений по признаку названия площадки pl=NA
select(where( ~!all(is.na(.x))))%>%
summarise_each(funs(mean(., na.rm = TRUE)),-c(mxdpt, soil_dpt)) %>%
mutate(WD=wd1+wd2+wd3) %>%
relocate(WD, .after = wd3)# создаём новую колонку с суммой 3 значений
# помещаем новую колонку после 'wd3'
narm1 %>%
dplyr::select(-c(branch, bark, stem, leaves, wd1, wd2, wd3, c_min20, cs_med, c_org10, lcs_cm_min30, lcs_cm_top, lcs_cm_min20, lcs_cm_org10, totcs_mdn, cs_org10, biottl)) %>%# exclude several variables
#scale() %>%
PCA(scale=T) %>%
summary()
narm1 %>%
dplyr::select(-c(pl, branch, bark, stem, leaves, wd1, wd2, wd3, c_min20, cs_med, c_org10, lcs_cm_min30, lcs_cm_top, lcs_cm_min20, lcs_cm_org10, totcs_mdn, cs_org10, biottl)) %>%# exclude several variables
#scale() %>%
PCA(scale=T) %>%
summary()
narm1 %>%
dplyr::select(-c(pl, branch, bark, stem, leaves, wd1, wd2, wd3, c_min20, cs_med, c_org10, lcs_cm_min30, lcs_cm_top, lcs_cm_min20, lcs_cm_org10, totcs_mdn, cs_org10, biottl)) %>%# exclude several variables
#scale() %>%
PCA() %>%
summary()
cssum %>%
select(where(is.numeric)) %>%
fa(nfactors=2,
rotate = "varimax",
fm="pa",
residuals = TRUE)
sumrf=narm1 %>%# этот массив создан на основе саммари с заполнением пропусков при помощи mice
select(-c(branch, bark, stem, leaves, wd1, wd2, wd3, c_min20, cs_med, c_org10, lcs_cm_min30, lcs_cm_top, lcs_cm_min20, lcs_cm_org10, totcs_mdn, cs_org10, biottl, c_lit, c_top, c_min30, lcs_cm_lit))
sumrf=sumrf %>%
dplyr::rename(Aboveground_C_total=agttl,
Litter_thikness=lthkn,
Bulk_density=bulk,
Litter_stock = lstock,
Larch = larch,
Birch=birch,
Dead_stand=dsw,
E_lon=e,
N_lat=n,
Alt=alt,
Slope=sl,
Slope_facing=az,
Fires_40yrs=fn40,
Yrs_lst_fr=tsf,
Ann_temp=at,
Ann_prec=anpr,
Soil_c_stock=totcs_mn,
Soil_depth=soil_mdp,
Litter_c_stock=cs_lit,
Soil_10_20_C=cs_min20,
Topsoil_C=cs_top,
Soil_20_30_C=cs_min30)
gl6=glm(Aboveground_C_total ~ Ann_prec, family=quasipoisson, data=sumrf)
plot_model(g68, type = "eff", terms = "MBS", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_bw()
#Preparing dataset
library(sjPlot)
plot_model(gl6, type = "eff", terms = "MBS", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_bw()
tab_model(gl6)
gl8=glm(Litter_c_stock ~ MBS, family=gaussian, data=sumrf)
gl6=glm(Aboveground_C_total ~ Ann_prec, family=gaussian, data=sumrf)
tab_model(gl6)
hist(sumrf$Ann_prec)
hist(sumrf$Aboveground_C_total)
gl6=glm(Aboveground_C_total ~ Ann_prec, family=quasi, data=sumrf)
tab_model(gl6)
gl6=glm(Aboveground_C_total ~ Ann_prec, family=poisson, data=sumrf)
tab_model(gl6)
plot_model(gl6, type = "eff", terms = "Ann_prec", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_bw()
library(performance)
plot_model(gl6, type = "eff", terms = "Ann_prec", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_bw()
y
plot_model(gl6, type = "eff", terms = "Ann_prec", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_bw()
summary(gl6)
check_model(gl6)
plot_model(gl6, type = "eff", terms = "Ann_prec", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_538()
plot_model(gl6, type = "eff", terms = "Ann_prec", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_cleveland()
plot_model(gl6, type = "eff", terms = "Ann_prec", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_sjplot2()
tab_model(gl6)
plot_model(gl6, type = "pred", terms = "Ann_prec", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_sjplot2()
plot_model(gl6, type = "emm", terms = "Ann_prec", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_sjplot2()
plot_model(gl6, type = "slope", terms = "Ann_prec", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_sjplot2()
plot_model(gl6, type = "std2", terms = "Ann_prec", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_sjplot2()
plot_model(gl6, type = "diag", terms = "Ann_prec", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_sjplot2()
plot_model(gl6, type = "eff", terms = "Ann_prec", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_sjplot2()
plot_model(gl3, type = "eff", terms = "Slope", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_sjplot2()
gl3=glm(Soil_c_stock ~ ., family = gaussian, data=sumrf[, 2:26])
gl2=glm(Aboveground_C_total ~ ., family = gaussian, data=sumrf[, 2:26])
gl1=glm(Litter_c_stock ~., family=gaussian, data=sumrf[, 2:26])
gl2=glm(Aboveground_C_total ~ ., family = gaussian, data=sumrf[, 2:26])
gl8=glm(Litter_c_stock ~ MBS, family=gaussian, data=sumrf)
library(sjPlot)
sumrf=sumrf %>%
dplyr::rename(Aboveground_C_total=agttl,
Litter_thikness=lthkn,
Bulk_density=bulk,
Litter_stock = lstock,
Larch = larch,
Birch=birch,
Dead_stand=dsw,
E_lon=e,
N_lat=n,
Alt=alt,
Slope=sl,
Slope_facing=az,
Fires_40yrs=fn40,
Yrs_lst_fr=tsf,
Ann_temp=at,
Ann_prec=anpr,
Soil_c_stock=totcs_mn,
Soil_depth=soil_mdp,
Litter_c_stock=cs_lit,
Soil_10_20_C=cs_min20,
Topsoil_C=cs_top,
Soil_20_30_C=cs_min30)
gl1=glm(Litter_c_stock ~., family=gaussian, data=sumrf[, 2:26])
gl3=glm(Soil_c_stock ~ ., family = gaussian, data=sumrf[, 2:26])
gl3=glm(Soil_c_stock ~ ., family = gaussian, data=sumrf[, 2:25])
plot_model(gl3, type = "eff", terms = "Slope", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_bw()
#Preparing dataset
library(sjPlot)
plot_model(gl3, type = "eff", terms = "Slope", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_bw()
library(ggeffects)
plot_model(gl3, type = "eff", terms = "Slope", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_bw()
plot_model(gl3, type = "std", terms = "Slope", colors = "paired", show.values = TRUE, show.p = TRUE)+theme_bw()
plot_model(gl3, type = "std", terms = "Slope", colors = "paired", show.values = TRUE, show.p = TRUE)
tab_model(gl3)
check_model(gl3)
library(performance)
check_model(gl3)
plot_model(gl3, terms = "Slope", colors = "paired", show.values = TRUE, show.p = TRUE)
plot_model(gl3)
gl3=glm(Soil_c_stock ~ .- Bulk_density, family = gaussian, data=sumrf[, 2:25])
tab_model(gl3)
gl3=glm(Soil_c_stock ~ Fires_40yrs, family = gaussian, data=sumrf[, 2:25])
tab_model(gl3)
plot_model(gl3)
plot_model(gl3, terms = "Fires_40yrs", colors = "paired", show.values = TRUE, show.p = TRUE)
plot_model(gl3, type = c("est", "re", "eff", "emm", "pred", "int", "std", "std2", "slope", "resid", "diag"), terms = "Fires_40yrs", colors = "paired", show.values = TRUE, show.p = TRUE)
plot_model(gl3, type = "eff", terms = "Fires_40yrs")
plot_model(gl3, type = "re", terms = "Fires_40yrs")
plot_model(gl3, type = "est", terms = "Fires_40yrs")
plot_model(gl3, type = "pred", terms = "Fires_40yrs")
