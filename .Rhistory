legend.title= element_text(size=0),
legend.key.height =unit(10, "pt"),
legend.margin = margin(0,0,0,0),
)
# =============================================================================================================
# ___________________________________________________________________________________________________________
# By the example above create figure on Januaries difference from the average
read_csv("data/NH.Ts+dSST.csv", skip=1, na="***")%>%
select(year=Year, j_diff=Jan)%>%
ggplot(aes(x=year, y=j_diff))+
geom_line(aes(color="1"), size=0.5, show.legend = F)+
geom_point(fill='white', aes(color="1"), size=3, shape=21, show.legend = T)+
geom_smooth(se=FALSE, aes(color="2"), size=0.5, span=0.15, show.legend = F)+
scale_x_continuous(breaks =seq(1880, 2000, 20, 2001, 2023, 1), expand=c(0,0))+
scale_y_continuous(limits=c(-0.6, 1.5), expand=c(0,0))+
scale_color_manual(name=NULL,
breaks=c(1, 2),
values = c("gray", "black"),
labels=c("Annual mean", "Lowess smoothing"),
guide= guide_legend(override.aes = list(shape=15, size=5)))+
labs(
x= "YEAR",
y= "Temperature anomaly (C)",
title = "Land-Ocean: Northern Hemispheric Means",
subtitle = "Data source: NASA's Goddard Institute for Space Studies(GISS).\nCredit: NASA/GISS"
)+
theme_light()+
theme(
axis.ticks = element_blank(),
plot.title.position = "plot",
plot.title = element_text(margin=margin(b=10), color = "red", face="bold"),
plot.subtitle = element_text(size=8, margin=margin(b=10)),
legend.position = c(0.15, 0.9),
legend.title= element_text(size=0),
legend.key.height =unit(10, "pt"),
legend.margin = margin(0,0,0,0),
)
read_csv("data/NH.Ts+dSST.csv", skip=1, na="***")%>%
select(year=Year, j_diff=Jan)%>%
ggplot(aes(x=year, y=j_diff))+
geom_line(aes(color="1"), size=0.5, show.legend = F)+
geom_point(fill='white', aes(color="1"), size=3, shape=21, show.legend = T)+
geom_smooth(se=FALSE, aes(color="2"), size=0.5, span=0.05, show.legend = F)+
scale_x_continuous(breaks =seq(1880, 2000, 20, 2001, 2023, 1), expand=c(0,0))+
scale_y_continuous(limits=c(-0.6, 1.5), expand=c(0,0))+
scale_color_manual(name=NULL,
breaks=c(1, 2),
values = c("gray", "black"),
labels=c("Annual mean", "Lowess smoothing"),
guide= guide_legend(override.aes = list(shape=15, size=5)))+
labs(
x= "YEAR",
y= "Temperature anomaly (C)",
title = "Land-Ocean: Northern Hemispheric Means",
subtitle = "Data source: NASA's Goddard Institute for Space Studies(GISS).\nCredit: NASA/GISS"
)+
theme_light()+
theme(
axis.ticks = element_blank(),
plot.title.position = "plot",
plot.title = element_text(margin=margin(b=10), color = "red", face="bold"),
plot.subtitle = element_text(size=8, margin=margin(b=10)),
legend.position = c(0.15, 0.9),
legend.title= element_text(size=0),
legend.key.height =unit(10, "pt"),
legend.margin = margin(0,0,0,0),
)
knitr::opts_chunk$set(echo = TRUE)
library(xlsx)
library(readxl)
library(psych)
library(dplyr)
library(ggplot2)
library(factoextra)
library(FactoMineR)
library(ade4)
library(car)
library(corrplot)
library(graphics)
library(pvclust)
library(doBy)
library(ggpubr)
library(scales)
require(ggthemes)
require(ggpmisc)
library(beanplot)
library(multcomp)
require(multcomp)
library(lubridate)
library(MASS)
library(TraMineR)
library(vegan)
library(tidyverse)
library(rstatix)
library(ggpubr)
library(cowplot)
library(gmt)
library(geosphere)
library(rlang)
library(plyr)
library(ggplot2)
library(nlme)
library(lme4)
library(gridExtra)
library(GGally)
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
library(reshape2)
library(PMCMR)
library(RVAideMemoire)
library(MuMIn)
library(visreg)
workbook<- "D:/R/CSTOCK/data/CSTOCK.xlsx"
cstock<-read.xlsx(workbook, 1, colClasses="character")# colClasses all characters to retrieve correct data without losing and replacing by NAs.
getwd
getwd()
workbook<- "data/CSTOCK.xlsx"
cstock<-read.xlsx(workbook, 1, colClasses="character")# colClasses all characters to retrieve correct data without losing and replacing by NAs.
workbook<- "D:/R/CSTOCK1/data/CSTOCK.xlsx"
cstock<-read.xlsx(workbook, 1, colClasses="character")# colClasses all characters to retrieve correct data without losing and replacing by NAs.
##transform data from 'chr' to proper format: 'num', 'int'
#cstock$ID<-as.vector(cstock$ID)# as 'ID' has a 'Y-1' format reformatting it to a factor returns NA, leave as is
cstock$plot<-as.factor(cstock$plot)
cstock$type<-as.factor(cstock$type)
cstock$mxdpt<-as.numeric(cstock$mxdpt)
cstock$lstock<-as.numeric(cstock$lstock)
cstock$e<-as.numeric(cstock$e)
cstock$n<-as.numeric(cstock$n)
cstock$TPG<-as.factor(cstock$TPG)
cstock$sl<-as.numeric(cstock$sl)
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot,type)%>%#grouping by given factors
summarise(mxdpt=mean(mxdpt, na.rm=T))%>%
pivot_wider(names_from = type, values_from = mxdpt)
cstock%>%
select(plot, mxdpt, type)
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot,type)
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot,type)%>%#grouping by given factors
summarise(mxdpt=mean(mxdpt, na.rm=T))
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot,type)%>%#grouping by given factors
summarise(mxdpt=mean(mxdpt, na.rm=T))%>%
pivot_wider(names_from = type, values_from = mxdpt)%>%
ggplot(aes(litter, soil))+
geom_point()
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot,type)%>%#grouping by given factors
#summarise(mxdpt=mean(mxdpt, na.rm=T))%>%
pivot_wider(names_from = type, values_from = mxdpt)%>%
ggplot(aes(litter, soil))+
geom_point()
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot,type)%>%#grouping by given factors
#summarise(mxdpt=mean(mxdpt, na.rm=T))%>%
pivot_wider(names_from = type, values_from = mxdpt)
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot, type)%>%
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot, type)
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot, type)
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot, type)%>%#grouping by given factors
summarise(mxdpt=mean(mxdpt, na.rm=T))
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot, type)%>%#grouping by given factors
summarise(mxdpt=mean(mxdpt, na.rm=T))%>%
pivot_wider(names_from = type, values_from = mxdpt)%>%
ggplot(aes(litter, soil))+
geom_point()
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot, type)%>%#grouping by given factors
summarise(mxdpt=mean(mxdpt, na.rm=T))
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
#group_by(plot, type)%>%#grouping by given factors
#summarise(mxdpt=mean(mxdpt, na.rm=T))%>%
pivot_wider(names_from = type, values_from = mxdpt)
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
#group_by(plot, type)%>%#grouping by given factors
#summarise(mxdpt=mean(mxdpt, na.rm=T))%>%
pivot_wider(names_from = type, values_from = mxdpt, na.rm=T)
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot, type)%>%#grouping by given factors
#summarise(mxdpt=mean(mxdpt, na.rm=T))%>%
pivot_wider(names_from = type, values_from = mxdpt)
cstock%>%
#select(plot, mxdpt, type)%>%#select a given columns
group_by(plot, type)%>%#grouping by given factors
summarise(mxdpt=mean(mxdpt, na.rm=T))%>%
pivot_wider(names_from = type, values_from = mxdpt)
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot, type)
cstock%>%
pivot_wider(names_from = type, values_from = mxdpt)
cstock%>%
pivot_wider(names_from = type, values_from = mxdpt, values_fill = 0)
cstock%>%
pivot_wider(names_from = type, values_from = mxdpt, values_fill = 0)%>%
ggplot(aes(litter, soil))+
geom_point()
cstock%>%
pivot_wider(names_from = type, values_from = mxdpt, values_fill = 0)%>%
ggplot(aes(litter, soil, group_by_(plot)))+
geom_point()
rename(cstock, plot = plt)
#pivot_wider creates columns of same row number with values from given column and names of new column by factor's level
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
group_by(plot, type)%>%#grouping by given factors
summarise(mxdpt=mean(mxdpt, na.rm=T))%>%
pivot_wider(names_from = type, values_from = mxdpt)%>%
ggplot(aes(litter, soil))+
geom_point()
cstock%>%
select(plot, mxdpt, type)%>%#select a given columns
pivot_wider(names_from = type, values_from = mxdpt)
cstock%>%
select(plot, type, mxdpt)%>%#select a given columns
pivot_wider(names_from = type, values_from = mxdpt)
cstock%>%
select(plot, type, mxdpt)
cstock%>%
select(plot, type, mxdpt)%>%#select a given columns
pivot_wider(names_from = type, values_from = mxdpt, values_fn = list)
cstock%>%
filter_at(vars(mxdpt), all_vars(!is.na(.)))
cstock%>%
filter_at(vars(mxdpt), all_vars(!is.na(.)))
select(plot, type, mxdpt)
cstock<-read.xlsx(workbook, 1, colClasses="character")# colClasses all characters to retrieve correct data without losing and replacing by NAs.
cstock$pl<-as.factor(cstock$pl)
cstock$type<-as.factor(cstock$type)
cstock$mxdpt<-as.numeric(cstock$mxdpt)
cstock$lyr<-as.integer(cstock$lyr)
cstock$lthkn<-as.numeric(cstock$lthkn)
cstock$lstock<-as.numeric(cstock$lstock)
cstock$e<-as.numeric(cstock$e)
cstock$n<-as.numeric(cstock$n)
cstock$TPG<-as.factor(cstock$TPG)
cstock$sl<-as.numeric(cstock$sl)
cstock%>%
filter_at(vars(mxdpt), all_vars(!is.na(.)))
select(pl, type, mxdpt)
cstock%>%
filter_at(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)
cstock%>%
filter_at(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)%>%#select a given columns
str()
cstock%>%
filter_at(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)%>%#select a given columns
group_by(plot, type)
cstock%>%
filter_at(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)%>%#select a given columns
group_by(pl, type)
cstock%>%
filter_at(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)%>%#select a given columns
group_by(pl, type)%>%#grouping by given factors
summarise(mxdpt=mean(mxdpt, na.rm=T))
set.seed(123)
n <- 895
cstock <- data.frame(
ID = seq(n),
plot = factor(sample(paste0("D", 1:42), n, replace = TRUE)),
type = factor(sample(c("litter", "soil"), n, replace = TRUE)),
mxdpt = runif(n, 5, 7)
)
cstock %>%
group_by(plot, type) %>%
summarise(mxdpt = mean(mxdpt, na.rm = TRUE)) %>%
pivot_wider(names_from = type, values_from = mxdpt) %>%
ggplot(aes(litter, soil)) +
geom_point()
#pivot_wider creates columns of same row number with values from given column and names of new column by factor's level
cstock%>%
filter_at(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)%>%#select a given columns
group_by(pl, type)%>%#grouping by given factors
summarise(mxdpt=mean(mxdpt, na.rm=T))%>%
pivot_wider(names_from = type, values_from = mxdpt, values_fn = list)ggplot(aes(litter, soil))+
cstock<-read.xlsx(workbook, 1, colClasses="character")# colClasses all characters to retrieve correct data without losing and replacing by NAs.
#names(cstock)
#cstock<-read.xlsx(workbook, 1,colClasses=c("integer","integer", "integer","numeric", "integer", "numeric"))
#str(cstock)
##transform data from 'chr' to proper format: 'num', 'int'
#cstock$ID<-as.vector(cstock$ID)# as 'ID' has a 'Y-1' format reformatting it to a factor returns NA, leave as is
cstock$pl<-as.factor(cstock$pl)
cstock$type<-as.factor(cstock$type)
cstock$mxdpt<-as.numeric(cstock$mxdpt)
cstock$lyr<-as.integer(cstock$lyr)
cstock$lthkn<-as.numeric(cstock$lthkn)
cstock$lstock<-as.numeric(cstock$lstock)
cstock$e<-as.numeric(cstock$e)
cstock$n<-as.numeric(cstock$n)
cstock$TPG<-as.factor(cstock$TPG)
cstock$sl<-as.numeric(cstock$sl)
cst <- data.frame(
ID = seq(n),
plot = factor(sample(paste0("D", 1:42), n, replace = TRUE)),
type = factor(sample(c("litter", "soil"), n, replace = TRUE)),
mxdpt = runif(n, 5, 7)
)
cst %>%
group_by(plot, type) %>%
summarise(mxdpt = mean(mxdpt, na.rm = TRUE)) %>%
pivot_wider(names_from = type, values_from = mxdpt) %>%
ggplot(aes(litter, soil)) +
geom_point()
library(xlsx)
library(readxl)
library(psych)
library(dplyr)
library(ggplot2)
library(factoextra)
library(FactoMineR)
library(ade4)
library(car)
library(corrplot)
library(graphics)
library(pvclust)
library(doBy)
library(ggpubr)
library(scales)
require(ggthemes)
require(ggpmisc)
library(beanplot)
library(multcomp)
require(multcomp)
library(lubridate)
library(MASS)
library(TraMineR)
library(vegan)
library(tidyverse)
library(rstatix)
library(ggpubr)
library(cowplot)
library(gmt)
library(geosphere)
library(rlang)
library(ggplot2)
library(nlme)
library(lme4)
library(gridExtra)
library(GGally)
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
library(reshape2)
library(PMCMR)
library(RVAideMemoire)
library(MuMIn)
library(visreg)
set.seed(123)
n <- 895
cst <- data.frame(
ID = seq(n),
plot = factor(sample(paste0("D", 1:42), n, replace = TRUE)),
type = factor(sample(c("litter", "soil"), n, replace = TRUE)),
mxdpt = runif(n, 5, 7)
)
cst %>%
group_by(plot, type) %>%
summarise(mxdpt = mean(mxdpt, na.rm = TRUE)) %>%
pivot_wider(names_from = type, values_from = mxdpt) %>%
ggplot(aes(litter, soil)) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
cstock%>%
filter_at(vars(mxdpt), all_vars(!is.na(.)))
library(dplyr)
library(ggplot2)
cstock%>%
filter(vars(mxdpt), all_vars(!is.na(.)))%>%
select_(pl, type, mxdpt)%>%#select a given columns
group_by_(pl, type)
install.packages(c("cachem", "data.table", "dtplyr", "gh", "httr", "RcppArmadillo", "tidyverse", "xts"))
library(plyr)
remove.packages("plyr")
remove.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages("dplyr")
library(tidyverse)
cstock%>%
filter(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)%>%#select a given columns
group_by(pl, type)
library(dplyr)
library(ggplot2)
cstock%>%
filter(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)
cstock%>%
filter(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)
detach("package:dplyr", unload = TRUE)
library(dplyr)
library(xlsx)
library(readxl)
library(psych)
library(dplyr)
library(factoextra)
library(FactoMineR)
library(ade4)
library(car)
library(corrplot)
library(graphics)
library(pvclust)
library(doBy)
library(ggpubr)
library(scales)
require(ggthemes)
require(ggpmisc)
library(beanplot)
library(multcomp)
require(multcomp)
library(lubridate)
library(MASS)
library(TraMineR)
library(vegan)
library(tidyverse)
library(rstatix)
library(ggpubr)
library(cowplot)
library(gmt)
library(geosphere)
library(rlang)
library(ggplot2)
library(nlme)
library(lme4)
library(gridExtra)
library(GGally)
#pivot_wider creates columns of same row number with values from given column and names of new column by factor's level
cstock%>%
filter(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)%>%#select a given columns
group_by(pl, type)%>%#grouping by given factors
summarise(mxdpt=mean(mxdpt, na.rm=T))%>%
pivot_wider(names_from = type, values_from = mxdpt, values_fn = list)ggplot(aes(litter, soil))+
cstock%>%
filter(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)
cstock%>%
filter(vars(mxdpt), all_vars(!is.na(.)))
set.seed(123)
n <- 895
cst <- data.frame(
ID = seq(n),
plot = factor(sample(paste0("D", 1:42), n, replace = TRUE)),
type = factor(sample(c("litter", "soil"), n, replace = TRUE)),
mxdpt = runif(n, 5, 7)
)
cst %>%
group_by(plot, type) %>%
summarise(mxdpt = mean(mxdpt, na.rm = TRUE)) %>%
pivot_wider(names_from = type, values_from = mxdpt) %>%
ggplot(aes(litter, soil)) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr, warn=FALSE)
library(tidyr)
cstock%>%
filter(vars(mxdpt), all_vars(!is.na(.)))
library(ggplot2)
library(dplyr, warn=FALSE)
library(tidyr)
cstock%>%
filter(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)
cstock%>%
filter_(vars(mxdpt), all_vars(!is.na(.)))
library(tidyr)
cstock%>%
filter(vars(mxdpt), all_vars(!is.na(.)))
rm(md, mds)
rm(n)
rm(cst)
cstock%>%
#filter(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)
cstock%>%
filter(vars(mxdpt), all_vars(!is.na(.)))%>%
select(pl, type, mxdpt)
cstock%>%
filter(mxdpt, all_vars(!is.na(.))
cstock%>%
library(abind)
detach("package:abind", unload = TRUE)
.libPaths()
